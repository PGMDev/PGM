<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
    <groupId>tc.oc</groupId>
    <artifactId>PGM</artifactId>
    <version>1.8-SNAPSHOT</version>
    <packaging>jar</packaging>
    <repositories>
        <repository>
            <id>ashcon-app</id>
            <url>https://repo.ashcon.app/content/repositories/snapshots</url>
        </repository>
    </repositories>
    <distributionManagement>
        <repository>
            <id>ashcon-app</id>
            <url>https://repo.ashcon.app/content/repositories/snapshots</url>
        </repository>
    </distributionManagement>
    <dependencies>
        <!-- Fork of Spigot and SportBukkit running Minecraft 1.8 -->
        <dependency>
            <groupId>app.ashcon</groupId>
            <artifactId>sportpaper</artifactId>
            <version>1.8.8-R0.1-SNAPSHOT</version>
        </dependency>
        <!-- Command framework for developing simple commands -->
        <dependency>
            <groupId>app.ashcon.intake</groupId>
            <artifactId>intake-bukkit</artifactId>
            <version>1.1-SNAPSHOT</version>
        </dependency>
        <!-- Time convience libraries for "Instant" and "Duration" -->
        <!-- TODO: Use Java 8's standard time libraries -->
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>2.10.1</version>
        </dependency>
        <!-- Time formatting library used for parsing durations such as "1h30m" -->
        <dependency>
            <groupId>org.ocpsoft.prettytime</groupId>
            <artifactId>prettytime</artifactId>
            <version>3.2.5.Final</version>
        </dependency>
        <!-- XML parsing library used for all "map.xml" configuration loading -->
        <dependency>
            <groupId>org.jdom</groupId>
            <artifactId>jdom2</artifactId>
            <version>2.0.5</version>
        </dependency>
        <!-- Compile-time library used to generate "Delegate" classes -->
        <!-- TODO: consider removing because unnecessary added complexity -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.10</version>
            <scope>provided</scope>
        </dependency>
        <!-- Error logging libraries for Sentry integration -->
        <dependency>
            <groupId>net.kencochrane.raven</groupId>
            <artifactId>raven</artifactId>
            <version>5.0</version>
        </dependency>
        <dependency>
            <groupId>net.kencochrane.raven</groupId>
            <artifactId>raven-log4j2</artifactId>
            <version>5.0</version>
        </dependency>
    </dependencies>
    <build>
        <sourceDirectory>${basedir}/src/main/java</sourceDirectory>
        <resources>
            <!-- Include the required "plugin.yml" and optional "config.yml" for Bukkit -->
            <resource>
                <targetPath>.</targetPath>
                <directory>${basedir}/src/main/resources</directory>
                 <includes>
                    <include>**/*.yml</include>
                </includes>
                <!-- Allows for variable substitution, see "plugin.yml" for an example -->
                <filtering>true</filtering>
            </resource>
            <!-- Include a fallback set of maps that can be played "out-of-the-box" -->
            <resource>
                <targetPath>.</targetPath>
                <directory>${basedir}/src/main/resources</directory>
                <includes>
                    <include>**/*.zip</include>
                </includes>
                <!-- Explicitly disable filtering as it will corrupt the .zip of maps -->
                <filtering>false</filtering>
            </resource>
            <!-- Include i18n translation sets for chat messages -->
            <resource>
                <directory>src/main/i18n/translations</directory>
                <includes>
                    <include>**/*.properties</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/i18n/templates</directory>
                <includes>
                    <include>**/*.properties</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.2.1</version>
                <configuration>
                    <createDependencyReducedPom>false</createDependencyReducedPom>
                    <minimizeJar>true</minimizeJar>
                    <artifactSet>
                        <excludes>
                            <exclude>app.ashcon:sportpaper:jar:*</exclude>
                            <exclude>app.ashcon.intake:intake-core:jar:*</exclude>
                            <exclude>com.google.code.findbugs:jsr305:jar:*</exclude>
                        </excludes>
                    </artifactSet>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Exposes git information to the build environment -->
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>2.2.4</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                    <format>json</format>
                </configuration>
            </plugin>
            <!-- Ensures that code is properly formatted using Google's code style -->
            <plugin>
                <groupId>com.coveo</groupId>
                <artifactId>fmt-maven-plugin</artifactId>
                <version>2.9</version>
                <configuration>
                    <style>google</style>
                </configuration>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Generates .zip resource of default maps provided in the maps/ folder -->
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <phase>generate-resources</phase>
                        <configuration>
                            <tasks>
                                <zip basedir="${basedir}/maps/" destfile="${basedir}/src/main/resources/maps.zip" />
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Optionally, builds an "out-of-the-box" PGM server as a Docker image -->
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>1.6.1</version>
                <configuration>
                    <from>
                        <image>ibmjava:8-sfj-alpine</image>
                    </from>
                    <to>
                        <image>pgm</image>
                        <tags>
                            <tag>latest</tag>
                        </tags>
                    </to>
                    <container>
                        <mainClass>tc.oc.Server</mainClass>
                        <jvmFlags>
                            <!-- Virtual machine -->
                            <jvmFlag>-XX:+UnlockExperimentalVMOptions</jvmFlag>
                            <jvmFlag>-XX:+UseCGroupMemoryLimitForHeap</jvmFlag>
                            <!-- Performance tune -->
                            <jvmFlag>-XX:+AggressiveOpts</jvmFlag>
                            <jvmFlag>-XX:+AlwaysPreTouch</jvmFlag>
                            <jvmFlag>-XX:+ParallelRefProcEnabled</jvmFlag>
                            <jvmFlag>-XX:+UseLargePagesInMetaspace</jvmFlag>
                            <jvmFlag>-XX:+UseBiasedLocking</jvmFlag>
                            <jvmFlag>-XX:+UseStringDeduplication</jvmFlag>
                            <!-- IBM Performance tune -->
                            <jvmFlag>-Xaggressive</jvmFlag>
                            <jvmFlag>-Xnoclassgc</jvmFlag>
                            <jvmFlag>-Xcompressedrefs</jvmFlag>
                            <jvmFlag>-Xfastresolve</jvmFlag>
                            <jvmFlag>-Xshareclasses:nonfatal</jvmFlag>
                            <jvmFlag>-Xshareclasses:cacheDir=/cache</jvmFlag>
                            <jvmFlag>-Xtune:elastic</jvmFlag>
                            <jvmFlag>-Xtune:virtualized</jvmFlag>
                            <jvmFlag>-Xzero</jvmFlag>
                            <!-- Garbage collection -->
                            <jvmFlag>-XX:+UseG1GC</jvmFlag>
                            <jvmFlag>-XX:MaxGCPauseMillis=100</jvmFlag>
                            <jvmFlag>-XX:-DisableExplicitGC</jvmFlag>
                            <jvmFlag>-XX:TargetSurvivorRatio=90</jvmFlag>
                            <jvmFlag>-XX:G1NewSizePercent=50</jvmFlag>
                            <jvmFlag>-XX:G1MaxNewSizePercent=80</jvmFlag>
                            <jvmFlag>-XX:InitiatingHeapOccupancyPercent=10</jvmFlag>
                            <jvmFlag>-XX:G1MixedGCLiveThresholdPercent=35</jvmFlag>
                            <jvmFlag>-XX:+ScavengeBeforeFullGC</jvmFlag>
                            <!-- JVM debugging -->
                            <jvmFlag>-Dcom.sun.management.jmxremote.port=25564</jvmFlag>
                            <jvmFlag>-Dcom.sun.management.jmxremote.ssl=false</jvmFlag>
                            <jvmFlag>-Dcom.sun.management.jmxremote.authenticate=false</jvmFlag>
                        </jvmFlags>
                        <ports>
                            <!-- Minecraft port -->
                            <port>25565/tcp</port>
                            <!-- JMX debug port, do not expose to the Internet -->
                            <port>25564/tcp</port>
                        </ports>
                        <volumes>
                            <volume>/server</volume>
                            <!-- Used by IBM to share classes between different JVMs -->
                            <volume>/cache</volume>
                        </volumes>
                        <workingDirectory>/server</workingDirectory>
                    </container>
                    <extraDirectories>
                        <paths>deploy</paths>
                    </extraDirectories>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>